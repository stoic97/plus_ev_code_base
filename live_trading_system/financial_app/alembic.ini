# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = app/db/migrations

# template used to generate migration files
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(slug)s

# sys.path path, will be prepended to sys.path if present
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
timezone = UTC

# max length of characters to apply to the
# "slug" field
truncate_slug_length = 40

# version path separator; defaults to "/"
version_path_separator = os

# revision environment name
revision_environment = false

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by version_path_separator
# version_locations = # Handled by env.py database routing

# DSNs use special variables which will be replaced at runtime
# Note: Using DB__ prefix to match the environment variable format in .env file
# The direct connection URL (not pooled) should be used for migrations
sqlalchemy.url = postgresql://%(DB__POSTGRES_USER)s:%(DB__POSTGRES_PASSWORD)s@%(DB__POSTGRES_SERVER)s:%(DB__POSTGRES_PORT)s/%(DB__POSTGRES_DB)s?sslmode=%(DB__POSTGRES_SSL_MODE)s

# timescale database connection (for market data)
# Note: Using Supabase as fallback when TimescaleDB is not available
timescaledb.url = postgresql://%(DB__TIMESCALE_USER)s:%(DB__TIMESCALE_PASSWORD)s@%(DB__TIMESCALE_SERVER)s:%(DB__TIMESCALE_PORT)s/%(DB__TIMESCALE_DB)s?sslmode=%(DB__TIMESCALE_SSL_MODE)s

# Connection pool settings for production workloads
[alembic:postgresql]
# Pool size (number of connections to keep open)
pool_size = 5
# Maximum overflow (number of connections above pool_size)
max_overflow = 10
# Recycle connections after N seconds (important for Supabase to avoid stale connections)
pool_recycle = 1800
# Pre-ping connections to verify they're still valid
pool_pre_ping = true

[alembic:timescaledb]
# Similar pool settings for TimescaleDB connection
pool_size = 5
max_overflow = 10
pool_recycle = 1800
pool_pre_ping = true

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S